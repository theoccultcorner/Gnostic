{
  "version": 3,
  "sources": ["../../emoji-picker-react/src/DomUtils/classNames.ts", "../../emoji-picker-react/src/DomUtils/focusElement.ts", "../../emoji-picker-react/src/components/context/ElementRefContext.tsx", "../../emoji-picker-react/src/types/exposedTypes.ts", "../../emoji-picker-react/src/config/categoryConfig.ts", "../../emoji-picker-react/src/config/cdnUrls.ts", "../../emoji-picker-react/src/data/skinToneVariations.ts", "../../emoji-picker-react/src/dataUtils/DataTypes.ts", "../../emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts", "../../emoji-picker-react/src/dataUtils/emojiSelectors.ts", "../../emoji-picker-react/src/config/config.ts", "../../emoji-picker-react/src/components/context/PickerConfigContext.tsx", "../../emoji-picker-react/src/config/mutableConfig.ts", "../../emoji-picker-react/src/config/useConfig.ts", "../../emoji-picker-react/src/hooks/useDebouncedState.ts", "../../emoji-picker-react/src/hooks/useHideEmojisByUniocode.ts", "../../emoji-picker-react/src/hooks/useDisallowedEmojis.ts", "../../emoji-picker-react/src/hooks/useInitialLoad.ts", "../../emoji-picker-react/src/components/context/PickerContext.tsx", "../../emoji-picker-react/src/hooks/useDisallowMouseMove.ts", "../../emoji-picker-react/src/DomUtils/elementPositionInRow.ts", "../../emoji-picker-react/src/DomUtils/selectors.ts", "../../emoji-picker-react/src/dataUtils/parseNativeEmoji.ts", "../../emoji-picker-react/src/dataUtils/suggested.ts", "../../emoji-picker-react/src/typeRefinements/typeRefinements.ts", "../../emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts", "../../emoji-picker-react/src/hooks/useSetVariationPicker.ts", "../../emoji-picker-react/src/hooks/useMouseDownHandlers.ts", "../../emoji-picker-react/src/hooks/useOnScroll.ts", "../../emoji-picker-react/src/DomUtils/scrollTo.ts", "../../emoji-picker-react/src/hooks/useFocus.ts", "../../emoji-picker-react/src/hooks/useFilter.ts", "../../emoji-picker-react/src/hooks/useIsEmojiHidden.ts", "../../emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js", "../../emoji-picker-react/src/components/atoms/Button.tsx", "../../emoji-picker-react/src/components/emoji/ClickableEmojiButton.tsx", "../../emoji-picker-react/src/components/emoji/EmojiImg.tsx", "../../emoji-picker-react/src/components/emoji/NativeEmoji.tsx", "../../emoji-picker-react/src/components/emoji/ViewOnlyEmoji.tsx", "../../emoji-picker-react/src/components/emoji/Emoji.tsx", "../../emoji-picker-react/src/components/body/EmojiCategory.tsx", "../../emoji-picker-react/src/components/body/Suggested.tsx", "../../emoji-picker-react/src/components/body/EmojiList.tsx", "../../emoji-picker-react/src/DomUtils/keyboardNavigation.ts", "../../emoji-picker-react/src/components/body/EmojiVariationPicker.tsx", "../../emoji-picker-react/src/components/body/Body.tsx", "../../emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts", "../../emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts", "../../emoji-picker-react/src/components/Layout/Flex.tsx", "../../emoji-picker-react/src/components/Layout/Space.tsx", "../../emoji-picker-react/src/components/Layout/Absolute.tsx", "../../emoji-picker-react/src/components/Layout/Relative.tsx", "../../emoji-picker-react/src/components/header/SkinTonePicker.tsx", "../../emoji-picker-react/src/components/footer/Preview.tsx", "../../emoji-picker-react/src/DomUtils/categoryNameFromDom.ts", "../../emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts", "../../emoji-picker-react/src/hooks/useIsSearchMode.ts", "../../emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts", "../../emoji-picker-react/src/hooks/useShouldHideCustomEmojis.ts", "../../emoji-picker-react/src/components/navigation/CategoryNavigation.tsx", "../../emoji-picker-react/src/components/header/CssSearch.tsx", "../../emoji-picker-react/src/components/header/Search.tsx", "../../emoji-picker-react/src/components/header/Header.tsx", "../../emoji-picker-react/src/DomUtils/getActiveElement.ts", "../../emoji-picker-react/src/hooks/useKeyboardNavigation.ts", "../../emoji-picker-react/src/hooks/preloadEmoji.ts", "../../emoji-picker-react/src/hooks/useOnFocus.ts", "../../emoji-picker-react/src/components/main/PickerMain.tsx", "../../emoji-picker-react/src/EmojiPickerReact.tsx", "../../emoji-picker-react/src/components/ErrorBoundary.tsx", "../../emoji-picker-react/src/components/emoji/ExportedEmoji.tsx", "../../emoji-picker-react/src/index.tsx"],
  "sourcesContent": ["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker',\n  darkTheme = 'epr-dark-theme',\n  autoTheme = 'epr-auto-theme'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n\nexport function clsx(...args: any[]): string {\n  const classes = args.reduce((classes, arg) => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    }\n\n    if (Array.isArray(arg)) {\n      classes.push(clsx(...arg));\n    }\n\n    if (typeof arg === 'object') {\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          classes.push(key);\n        }\n      });\n    }\n\n    return classes;\n  }, []);\n\n  return classes.filter(Boolean).join(' ');\n}\n", "import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n", "import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n", "export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n", "import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n", "import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n", "import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n", "import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n", "import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n", "import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function setCustomEmojis(customEmojis: CustomEmoji[]): void {\n  emojis[Categories.CUSTOM].length = 0;\n\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    emojis[Categories.CUSTOM].push(emojiData as never);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n\n    if (emojiHasVariations(Emoji)) {\n      emojiVariations(Emoji).forEach(variation => {\n        allEmojis[variation] = Emoji;\n      });\n    }\n\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n", "import * as React from 'react'\n\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  setCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\nexport const SEARCH_RESULTS_NO_RESULTS_FOUND = 'No results found';\nexport const SEARCH_RESULTS_SUFFIX =\n  ' found. Use up and down arrow keys to navigate.';\nexport const SEARCH_RESULTS_ONE_RESULT_FOUND =\n  '1 result' + SEARCH_RESULTS_SUFFIX;\nexport const SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND =\n  '%n results' + SEARCH_RESULTS_SUFFIX;\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  setCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    className: '',\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    style: {},\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  className: string;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  style: React.CSSProperties;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n", "import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const mergedConfig = useSetConfig(config);\n\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function useSetConfig(config: PickerConfig) {\n  const [mergedConfig, setMergedConfig] = React.useState(() =>\n    mergeConfig(config)\n  );\n\n  React.useEffect(() => {\n    if (config.customEmojis?.length !== mergedConfig.customEmojis?.length) {\n      setMergedConfig(mergeConfig(config));\n    }\n    // not gonna...\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.customEmojis?.length]);\n\n  return mergedConfig;\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n", "import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n", "import * as React from 'react';\n\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  SEARCH_RESULTS_NO_RESULTS_FOUND,\n  SEARCH_RESULTS_ONE_RESULT_FOUND,\n  SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function useClassNameConfig(): string {\n  const { className } = usePickerConfig();\n  return className;\n}\n\nexport function useStyleConfig(): React.CSSProperties {\n  const { height, width, style } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width), ...style };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n\nexport function useSearchResultsConfig(searchResultsCount: number): string {\n  const hasResults = searchResultsCount > 0;\n  const isPlural = searchResultsCount > 1;\n\n  if (hasResults) {\n    return isPlural ?\n      SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND.replace('%n', searchResultsCount.toString())\n        : SEARCH_RESULTS_ONE_RESULT_FOUND;\n  }\n\n  return SEARCH_RESULTS_NO_RESULTS_FOUND;\n}\n", "import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n", "import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n", "import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n", "import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n", "import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n", "import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n", "import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(unified ?? originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n", "export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n", "import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n", "import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n", "import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n", "import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n", "import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n", "import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n", "import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n", "import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\nimport { useSearchResultsConfig } from '../config/useConfig';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n  const statusSearchResults = getStatusSearchResults(filterRef.current, searchTerm);\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n    statusSearchResults,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n\nfunction getStatusSearchResults(filterState: FilterState, searchTerm: string): string {\n  if (!filterState?.[searchTerm]) return '';\n\n  const searchResultsCount = Object.entries(filterState?.[searchTerm])?.length || 0;\n  return useSearchResultsConfig(searchResultsCount);\n}\n", "import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n", "import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n", "import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <h2 className={ClassNames.label}>{categoryName}</h2>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n", "import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n  const renderdCategoriesCountRef = React.useRef(0);\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            category={category}\n            categoryConfig={categoryConfig}\n            renderdCategoriesCountRef={renderdCategoriesCountRef}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  category,\n  categoryConfig,\n  renderdCategoriesCountRef\n}: {\n  category: Categories;\n  categoryConfig: CategoryConfig;\n  renderdCategoriesCountRef: React.MutableRefObject<number>;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && renderdCategoriesCountRef.current > 0\n      ? []\n      : emojisByCategory(category);\n\n  if (emojisToPush.length > 0) {\n    renderdCategoriesCountRef.current++;\n  }\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n", "import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n", "import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n", "import * as React from 'react';\n\nimport './Flex.css';\nimport { clsx } from '../../DomUtils/classNames';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(\n    previewEmoji?.unified ?? previewEmoji?.originalUnified\n  );\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji =\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji);\n    if (!defaultEmoji) {\n      return null;\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">{emojiName(emoji)}</div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n", "export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n", "import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n", "import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n", "import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n      <div\n        className='epr-category-nav'\n        role='tablist'\n        aria-label='Category navigation'\n        id='epr-category-nav-id'\n        ref={CategoryNavigationRef}\n      >\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        const isActiveCategory = category === activeCategory;\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={(isSearchMode || isActiveCategory) ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: isActiveCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n            aria-selected={isActiveCategory}\n            role='tab'\n            aria-controls='epr-category-nav-id'\n          />\n        );\n      })}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, asSelectors } from '../../DomUtils/classNames';\nimport { getNormalizedSearchTerm } from '../../hooks/useFilter';\n\nconst SCOPE = `${asSelectors(ClassNames.emojiPicker)} ${asSelectors(\n  ClassNames.emojiList\n)}`;\n\nconst EMOJI_BUTTON = ['button', asSelectors(ClassNames.emoji)].join('');\nconst CATEGORY = asSelectors(ClassNames.category);\n\nexport function CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const q = genQuery(value);\n\n  return (\n    <style>{`\n    ${SCOPE} ${EMOJI_BUTTON} {\n      display: none;\n    }\n\n\n    ${SCOPE} ${q} {\n      display: flex;\n    }\n\n    ${SCOPE} ${CATEGORY}:not(:has(${q})) {\n      display: none;\n    }\n  `}</style>\n  );\n}\n\nfunction genQuery(value: string): string {\n  return [\n    EMOJI_BUTTON,\n    '[data-full-name*=\"',\n    getNormalizedSearchTerm(value),\n    '\"]'\n  ].join('');\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useClearSearch, useFilter } from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { CssSearch } from './CssSearch';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { statusSearchResults, searchTerm, onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        aria-controls=\"epr-search-id\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      {searchTerm ? (\n        <div\n          role=\"status\"\n          className={clsx(\n            'epr-status-search-results',\n            'epr-status-visually-hidden'\n          )}\n          aria-live=\"polite\"\n          id=\"epr-search-id\"\n          aria-atomic=\"true\"\n        >\n          {statusSearchResults}\n        </div>\n      ) : null}\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n", "import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n", "import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n", "import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n", "import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n", "import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { useClassNameConfig, useStyleConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const className = useClassNameConfig();\n  const style = useStyleConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        [ClassNames.darkTheme]: theme === Theme.DARK,\n        [ClassNames.autoTheme]: theme === Theme.AUTO\n      }, className)}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n", "import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  const prevCustomEmojis = prev.customEmojis ?? [];\n  const nextCustomEmojis = next.customEmojis ?? [];\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.className === next.className &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.style === next.style &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation &&\n    prevCustomEmojis.length === nextCustomEmojis.length\n  );\n});\n", "import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n", "import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],
  "mappings": "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",
  "names": ["ClassNames", "asSelectors", "classNames", "map", "c", "join", "clsx", "args", "classes", "reduce", "arg", "push", "Array", "isArray", "Object", "entries", "forEach", "key", "value", "filter", "Boolean", "focusElement", "element", "requestAnimationFrame", "focus", "focusPrevElementSibling", "prev", "previousElementSibling", "focusNextElementSibling", "next", "nextElementSibling", "focusFirstElementChild", "first", "firstElementChild", "ElementRefContextProvider", "children", "PickerMainRef", "React", "AnchoredEmojiRef", "BodyRef", "SearchInputRef", "SkinTonePickerRef", "CategoryNavigationRef", "VariationPickerRef", "ElementRefContext", "Provider", "useElementRef", "usePickerMainRef", "useAnchoredEmojiRef", "useSetAnchoredEmojiRef", "target", "current", "useBodyRef", "useSearchInputRef", "useSkinTonePickerRef", "useCategoryNavigationRef", "useVariationPickerRef", "SuggestionMode", "EmojiStyle", "Theme", "SkinTones", "Categories", "SkinTonePickerLocation", "categoriesOrdered", "SUGGESTED", "CUSTOM", "SMILEYS_PEOPLE", "ANIMALS_NATURE", "FOOD_DRINK", "TRAVEL_PLACES", "ACTIVITIES", "OBJECTS", "SYMBOLS", "FLAGS", "SuggestedRecent", "name", "category", "configByCategory", "baseCategoriesConfig", "modifiers", "categoryFromCategoryConfig", "categoryNameFromCategoryConfig", "mergeCategoriesConfig", "userCategoriesConfig", "extra", "suggestionMode", "RECENT", "base", "length", "getBaseConfigByCategory", "modifier", "assign", "CDN_URL_APPLE", "CDN_URL_FACEBOOK", "CDN_URL_TWITTER", "CDN_URL_GOOGLE", "cdnUrl", "emojiStyle", "TWITTER", "GOOGLE", "FACEBOOK", "APPLE", "skinToneVariations", "NEUTRAL", "LIGHT", "MEDIUM_LIGHT", "MEDIUM", "MEDIUM_DARK", "DARK", "skinTonesNamed", "acc", "skinTonesMapped", "mapped", "skinTone", "EmojiProperties", "alphaNumericEmojiIndex", "setTimeout", "allEmojis", "searchIndex", "emoji", "indexEmoji", "joinedNameString", "emojiNames", "flat", "toLowerCase", "replace", "split", "char", "emojiUnified", "addedIn", "parseFloat", "added_in", "emojiName", "unifiedWithoutSkinTone", "unified", "splat", "splice", "emojiHasVariations", "emojiVariationUnified", "emojisByCategory", "emojis", "emojiUrlByUnified", "emojiVariations", "variations", "find", "variation", "includes", "emojiByUnified", "allEmojisByUnified", "withoutSkinTone", "values", "setCustomEmojis", "customEmojis", "emojiData", "customToRegularEmoji", "names", "id", "imgUrl", "Emoji", "activeVariationFromUnified", "suspectedSkinTone", "KNOWN_FAILING_EMOJIS", "DEFAULT_SEARCH_PLACEHOLDER", "SEARCH_RESULTS_NO_RESULTS_FOUND", "SEARCH_RESULTS_SUFFIX", "SEARCH_RESULTS_ONE_RESULT_FOUND", "SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND", "mergeConfig", "userConfig", "basePickerConfig", "previewConfig", "config", "categories", "suggestedEmojisMode", "skinTonePickerLocation", "searchDisabled", "PREVIEW", "autoFocusSearch", "className", "defaultSkinTone", "emojiVersion", "getEmojiUrl", "height", "lazyLoadEmojis", "basePreviewConfig", "searchPlaceHolder", "searchPlaceholder", "SEARCH", "skinTonesDisabled", "style", "FREQUENT", "theme", "unicodeToHide", "Set", "width", "defaultEmoji", "defaultCaption", "showPreview", "ConfigContext", "PickerConfigProvider", "mergedConfig", "useSetConfig", "setMergedConfig", "usePickerConfig", "MutableConfigContext", "createContext", "useMutableConfig", "mutableConfig", "useContext", "useDefineMutableConfig", "MutableConfigRef", "useRef", "onEmojiClick", "emptyFunc", "useEffect", "useSearchPlaceHolderConfig", "p", "useDefaultSkinToneConfig", "useSkinTonesDisabledConfig", "useEmojiStyleConfig", "useAutoFocusSearchConfig", "useCategoriesConfig", "useCustomEmojisConfig", "useOnEmojiClickConfig", "usePreviewConfig", "useThemeConfig", "useSuggestedEmojisModeConfig", "useLazyLoadEmojisConfig", "useClassNameConfig", "useStyleConfig", "getDimension", "useEmojiVersionConfig", "useSearchDisabledConfig", "useSkinTonePickerLocationConfig", "useUnicodeToHide", "useGetEmojiUrlConfig", "dimensionConfig", "useSearchResultsConfig", "searchResultsCount", "hasResults", "isPlural", "toString", "useDebouncedState", "initialValue", "delay", "useState", "state", "setState", "timer", "debouncedSetState", "Promise", "resolve", "clearTimeout", "window", "useIsUnicodeHidden", "has", "useDisallowedEmojis", "DisallowedEmojisRef", "emojiVersionConfig", "useMemo", "Number", "isNaN", "disallowedEmojis", "addedInNewerVersion", "useIsEmojiDisallowed", "isUnicodeHidden", "isEmojiDisallowed", "supportedLevel", "useMarkInitialLoad", "dispatch", "PickerContextProvider", "filterRef", "disallowClickRef", "disallowMouseRef", "disallowedEmojisRef", "suggestedUpdateState", "Date", "now", "searchTerm", "skinToneFanOpenState", "activeSkinTone", "activeCategoryState", "emojisThatFailedToLoadState", "emojiVariationPickerState", "isPastInitialLoad", "setIsPastInitialLoad", "PickerContext", "undefined", "useFilterRef", "useDisallowClickRef", "useDisallowMouseRef", "useSearchTermState", "useActiveSkinToneState", "useEmojisThatFailedToLoadState", "useIsPastInitialLoad", "useEmojiVariationPickerState", "useSkinToneFanOpenState", "useUpdateSuggested", "suggestedUpdated", "setsuggestedUpdate", "updateSuggested", "useDisallowMouseMove", "DisallowMouseRef", "disallowMouseMove", "useAllowMouseMove", "allowMouseMove", "useIsMouseDisallowed", "isMouseDisallowed", "useOnMouseMove", "bodyRef", "addEventListener", "onMouseMove", "passive", "removeEventListener", "elementCountInRow", "parent", "parentWidth", "getBoundingClientRect", "elementWidth", "Math", "floor", "elementIndexInRow", "elementLeft", "left", "parentLeft", "rowNumber", "elementHeight", "elementTop", "top", "parentTop", "round", "hasNextRow", "parentHeight", "getRowElements", "elements", "row", "elementsInRow", "lastRow", "firstElementIndex", "lastElementIndex", "slice", "getNextRowElements", "allElements", "currentRow", "nextRow", "getElementInRow", "indexInRow", "rowElements", "getElementInNextRow", "index", "nextRowElements", "getElementInPrevRow", "prevRowElements", "firstVisibleElementInContainer", "parentBottom", "bottom", "visibleElements", "elementBottom", "hasNextElementSibling", "EmojiButtonSelector", "VisibleEmojiSelector", "visible", "hidden", "buttonFromTarget", "emojiElement", "closest", "emojiFromElement", "originalUnified", "originalUnifiedFromEmojiElement", "unifiedFromEmojiElement", "isEmojiElement", "matches", "parentElement", "clientHeight", "emojiTrueOffsetTop", "button", "closestCategory", "labelHeight", "categoryLabelHeight", "elementOffsetTop", "categoryWithoutLabel", "querySelector", "categoryContent", "isEmojiBehindLabel", "emojiDistanceFromScrollTop", "queryScrollBody", "root", "scrollBody", "closestScrollBody", "scrollTop", "emojiTruOffsetLeft", "elementOffsetLeft", "offsetTop", "offsetLeft", "elementDataSetKey", "elementDataSet", "dataset", "isVisibleEmoji", "classList", "contains", "isHidden", "allVisibleEmojis", "from", "querySelectorAll", "lastVisibleEmoji", "last", "prevVisibleEmoji", "nextVisibleEmoji", "firstVisibleEmoji", "nextCategory", "prevCategory", "closestCategoryContent", "parseNativeEmoji", "hex", "String", "fromCodePoint", "parseInt", "SUGGESTED_LS_KEY", "getSuggested", "mode", "localStorage", "recent", "JSON", "parse", "getItem", "sort", "a", "b", "count", "setSuggested", "existing", "u", "nextList", "concat", "i", "original", "min", "setItem", "stringify", "isCustomCategory", "isCustomEmoji", "useCloseAllOpenToggles", "variationPicker", "setVariationPicker", "skinToneFanOpen", "setSkinToneFanOpen", "closeAllOpenToggles", "useCallback", "useHasOpenToggles", "hasOpenToggles", "useSetVariationPicker", "setAnchoredEmojiRef", "setEmojiVariationPicker", "useMouseDownHandlers", "mouseDownTimerRef", "activeEmojiStyle", "onClick", "event", "emojiFromEvent", "skinToneToUse", "emojiClickOutput", "onMouseDown", "onMouseUp", "getImageUrl", "imageUrl", "isCustom", "useOnScroll", "onScroll", "scrollTo", "$eprBody", "scrollBy", "by", "useScrollTo", "scrollEmojiAboveLabel", "useFocusSearchInput", "useFocusSkinTonePicker", "useFocusCategoryNavigation", "useSetFilterRef", "setFilter", "setter", "useClearSearch", "applySearch", "useApplySearch", "focusSearchInput", "clearSearch", "useAppendSearch", "appendSearch", "str", "getNormalizedSearchTerm", "useFilter", "setFilterRef", "statusSearchResults", "getStatusSearchResults", "onChange", "inputValue", "nextValue", "longestMatch", "findLongestMatch", "filterEmojiObjectByKeyword", "setSearchTerm", "then", "keyword", "filtered", "hasMatch", "some", "useIsEmojiFiltered", "isEmojiFilteredBySearchTerm", "dict", "longestMatchingKey", "keys", "trim", "filterState", "useIsEmojiHidden", "emojisThatFailedToLoad", "isEmojiFiltered", "failedToLoad", "filteredOut", "Button", "props", "type", "ClickableEmojiButton", "hiddenOnSearch", "showVariations", "hasVariations", "EmojiImg", "lazyLoad", "onError", "src", "alt", "external", "loading", "NativeEmoji", "ViewOnlyEmoji", "size", "setEmojisThatFailedToLoad", "fontSize", "emojiToRender", "NATIVE", "add", "ClickableEmoji", "EmojiCategory", "categoryConfig", "categoryName", "label", "Suggested", "suggestedEmojisModeConfig", "suggested", "suggestedItem", "EmojiList", "renderdCategoriesCountRef", "emojiList", "RenderCategory", "isEmojiHidden", "emojisToPush", "hiddenCounter", "isDisallowed", "focusFirstVisibleEmoji", "focusAndClickFirstVisibleEmoji", "firstEmoji", "click", "focusLastVisibleEmoji", "focusNextVisibleEmoji", "focusPrevVisibleEmoji", "focusVisibleEmojiOneRowUp", "exitUp", "visibleEmojiOneRowUp", "focusVisibleEmojiOneRowDown", "visibleEmojiOneRowDown", "countInRow", "prevVisibleCategory", "nextVisibleCategory", "itemInNextRow", "Direction", "EmojiVariationPicker", "useVariationPickerTop", "getTop", "getMenuDirection", "getPointerStyle", "usePointerStyle", "pointerStyle", "ref", "Down", "clientWidth", "direction", "Up", "emojiOffsetTop", "buttonHeight", "Body", "useEmojiPreviewEvents", "allow", "setPreviewEmoji", "onEscape", "onMouseOver", "onEnter", "onLeave", "e", "relatedTarget", "useIsSkinToneInSearch", "skinTonePickerLocationConfig", "useIsSkinToneInPreview", "FlexDirection", "Flex", "ROW", "Space", "flex", "Absolute", "position", "Relative", "ITEM_SIZE", "SkinTonePickerMenu", "right", "SkinTonePicker", "SkinTonePickerDirection", "VERTICAL", "HORIZONTAL", "isDisabled", "isOpen", "setIsOpen", "setActiveSkinTone", "fullWidth", "expandedSize", "vertical", "open", "flexBasis", "skinToneVariation", "active", "transform", "tabIndex", "Preview", "isSkinToneInPreview", "PreviewBody", "previewEmoji", "variationPickerEmoji", "show", "PreviewContent", "defaultText", "categoryNameFromDom", "$category", "getAttribute", "useActiveCategoryScrollDetection", "setActiveCategory", "visibleCategories", "Map", "observer", "IntersectionObserver", "entry", "set", "intersectionRatio", "ratios", "lastCategory", "ratio", "threshold", "el", "observe", "useIsSearchMode", "useScrollCategoryIntoView", "scrollCategoryIntoView", "useShouldHideCustomEmojis", "customCategoryConfig", "CategoryNavigation", "activeCategory", "isSearchMode", "categoriesConfig", "hideCustomCategory", "role", "isActiveCategory", "SCOPE", "emojiPicker", "EMOJI_BUTTON", "CATEGORY", "CssSearch", "q", "genQuery", "SearchContainer", "isSkinToneInSearch", "Search", "inc", "setInc", "placeholder", "autoFocus", "input", "onFocus", "Header", "getActiveElement", "document", "activeElement", "KeyboardEvents", "useKeyboardNavigation", "usePickerMainKeyboardEvents", "useSearchInputKeyboardEvents", "useSkinTonePickerKeyboardEvents", "useCategoryNavigationKeyboardEvents", "useBodyKeyboardEvents", "onKeyDown", "Escape", "preventDefault", "focusSkinTonePicker", "setSkinToneFanOpenState", "goDownFromSearchInput", "useGoDownFromSearchInput", "ArrowRight", "ArrowDown", "Enter", "onType", "useOnType", "ArrowLeft", "focusNextSkinTone", "focusPrevSkinTone", "ArrowUp", "goUpFromBody", "useGoUpFromBody", "focusCategoryNavigation", "goUpFromEmoji", "exitLeft", "currentSkinTone", "hasModifier", "match", "metaKey", "ctrlKey", "altKey", "preloadEmoji", "preloadedEmojs", "emojiUrl", "preloadImage", "url", "image", "Image", "useOnFocus", "PickerMain", "PickerRootElement", "searchModeActive", "searchActive", "darkTheme", "autoTheme", "AUTO", "EmojiPicker", "prevCustomEmojis", "nextCustomEmojis", "ErrorBoundary", "hasError", "getDerivedStateFromError", "componentDidCatch", "error", "errorInfo", "console", "render", "ExportedEmoji", "EmojiPickerReact"]
}
